# my_data.contraception
# sapply(my_data.contraception, is.numeric) # none numeric for some reason
# making all applicable columns numeric
my_data.contraception$Hormonal.Contraceptives <- as.numeric(my_data.contraception$Hormonal.Contraceptives)
my_data.contraception$Hormonal.Contraceptives..years. <- as.numeric(my_data.contraception$Hormonal.Contraceptives..years.)
my_data.contraception$IUD  <- as.numeric(my_data.contraception$IUD)
my_data.contraception$IUD..years. <- as.numeric(my_data.contraception$IUD..years.)
# sapply(my_data.contraception, is.numeric)
# now all columns are numeric
# typeof(my_data$STDs..Time.since.first.diagnosis) # all rows are ints
res.contraception <- cor(my_data.contraception)
corrplot(res.contraception, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
str(data)
summary(data$Hormonal.Contraceptives)
summary(data$Hormonal.Contraceptives..years.)
data$Years.HCP <- as.numeric(as.character(data$Hormonal.Contraceptives)) *
as.numeric(as.character(data$Hormonal.Contraceptives..years.))
summary(data$Years.HCP)
histogram(data$Years.HCP[-c(which(is.na(data$Years.HCP)))])
hist(data$Years.HCP[-c(which(is.na(data$Years.HCP)))])
hist(log(data$Years.HCP[-c(which(is.na(data$Years.HCP)))]+1))
log.years.hcp <- log(data$Years.HCP[-c(which(is.na(data$Years.HCP)))]+1)
log.years.hcp <- log.years.hcp[-c(which(log.years.hcp == log(1)))]
histogram(log.years.hcp)
histogram(data$log.years.hcp)
hist(data$log.years.hcp)
data$log.Years.HCP <- log(data$Years.HCP+1)
summary(data$log.Years.HCP)
summary(data$IUD)
summary(data$IUD..years.)
data$Years.IUD <- as.numeric(as.character(data$IUD)) * as.numeric(as.character(data$IUD..years.))
summary(data$Years.IUD)
histogram(data$Years.IUD[-c(which(is.na(data$Years.IUD)))])
hist(data$Years.IUD[-c(which(is.na(data$Years.IUD)))])
data$Years.IUD <- data$Years.IUD[-c(which(is.na(data$Years.IUD)))]
summary(data$Years.IUD)
data$Years.IUD
hist(data$Years.IUD[-c(which(is.na(data$Years.IUD)))])
hist(data$Years.IUD[c(which(!is.na(data$Years.IUD)))])
histogram(log(data$Years.IUD[-c(which(is.na(data$Years.IUD)))]+1))
hist(log(data$Years.IUD[-c(which(is.na(data$Years.IUD)))]+1))
hist(log(data$Years.IUD[c(which(!is.na(data$Years.IUD)))]+1))
log.years.iud <- log(data$Years.IUD[c(which(!is.na(data$Years.IUD)))]+1)
-
histogram(log.years.iud)
hist(log.years.iud)
data$log.Years.IUD <- log(data$Years.IUD+1)
summary(data$log.Years.IUD)
# Hormonal contraceptives
str(data)
summary(data$Hormonal.Contraceptives)
summary(data$Hormonal.Contraceptives..years.)
# Create Years.HCP
data$Years.HCP <- as.numeric(as.character(data$Hormonal.Contraceptives)) *
as.numeric(as.character(data$Hormonal.Contraceptives..years.))
summary(data$Years.HCP)
# Histogram HCP
hist(data$Years.HCP[-c(which(is.na(data$Years.HCP)))])
# Histogram log(HCP+1)
hist(log(data$Years.HCP[-c(which(is.na(data$Years.HCP)))]+1))
# The log transformed data should be closer to normal is you remove first peak
log.years.hcp <- log(data$Years.HCP[-c(which(is.na(data$Years.HCP)))]+1)
log.years.hcp <- log.years.hcp[-c(which(log.years.hcp == log(1)))]
# hist(data$log.years.hcp)
# Create log.Years.HCP
data$log.Years.HCP <- log(data$Years.HCP+1)
summary(data$log.Years.HCP)
# IUD's
summary(data$IUD)
summary(data$IUD..years.)
# Create Years.IUD
data$Years.IUD <- as.numeric(as.character(data$IUD)) * as.numeric(as.character(data$IUD..years.))
summary(data$Years.IUD)
# Histogram IUD
data$Years.IUD
hist(data$Years.IUD[c(which(!is.na(data$Years.IUD)))])
# Histogram log(IUD+1)
hist(log(data$Years.IUD[c(which(!is.na(data$Years.IUD)))]+1))
# The log transformed data should be closer to normal is you remove first peak
log.years.iud <- log(data$Years.IUD[c(which(!is.na(data$Years.IUD)))]+1)
log.years.iud <- log.years.iud[-c(which(log.years.iud == log(1)))]
hist(log.years.iud)
# Create log.Years.IUD
data$log.Years.IUD <- log(data$Years.IUD+1)
summary(data$log.Years.IUD)
# Hormonal contraceptives
str(data)
summary(data$Hormonal.Contraceptives)
summary(data$Hormonal.Contraceptives..years.)
# Create Years.HCP
data$Years.HCP <- as.numeric(as.character(data$Hormonal.Contraceptives)) *
as.numeric(as.character(data$Hormonal.Contraceptives..years.))
summary(data$Years.HCP)
# Histogram HCP
hist(data$Years.HCP[-c(which(is.na(data$Years.HCP)))])
# Histogram log(HCP+1)
hist(log(data$Years.HCP[-c(which(is.na(data$Years.HCP)))]+1))
# The log transformed data should be closer to normal is you remove first peak
log.years.hcp <- log(data$Years.HCP[-c(which(is.na(data$Years.HCP)))]+1)
log.years.hcp <- log.years.hcp[-c(which(log.years.hcp == log(1)))]
# hist(data$log.years.hcp)
# Create log.Years.HCP
data$log.Years.HCP <- log(data$Years.HCP+1)
summary(data$log.Years.HCP)
# IUD's
summary(data$IUD)
summary(data$IUD..years.)
# Create Years.IUD
data$Years.IUD <- as.numeric(as.character(data$IUD)) * as.numeric(as.character(data$IUD..years.))
summary(data$Years.IUD)
# Histogram IUD
data$Years.IUD
hist(data$Years.IUD[c(which(!is.na(data$Years.IUD)))])
# Histogram log(IUD+1)
hist(log(data$Years.IUD[c(which(!is.na(data$Years.IUD)))]+1))
# The log transformed data should be closer to normal is you remove first peak
log.years.iud <- log(data$Years.IUD[c(which(!is.na(data$Years.IUD)))]+1)
log.years.iud <- log.years.iud[-c(which(log.years.iud == log(1)))]
hist(log.years.iud)
# Create log.Years.IUD
data$log.Years.IUD <- log(data$Years.IUD+1)
summary(data$log.Years.IUD)
names(data)
data <- data[-c(4:7,26)]
names(data)
names(data)
data <- data[-c(23)]
names(data)
# selecting `STDs`[12], `STDs..number.`[13], `STDs.condylomatosis`[14], `STDs.vulvo.perineal.condylomatosis`[15], `STDs.syphilis`[16], `STDs..Number.of.diagnosis`[17], `STDs..Time.since.first.diagnosis`[18]
# names(data)
# data$std
my_data <- as.data.frame(data[, c("STDs", "STDs..number.", "STDs.condylomatosis", "STDs.vulvo.perineal.condylomatosis", "STDs.syphilis", "STDs..Number.of.diagnosis")])
# my_data
# sapply(my_data, is.numeric) # many not numeric for some reason
# making all applicable columns numeric
my_data$STDs <- as.numeric(as.character(my_data$STDs))
my_data$STDs..number. <- as.numeric(as.character(my_data$STDs..number.))
my_data$STDs.condylomatosis  <- as.numeric(as.character(my_data$STDs.condylomatosis))
my_data$STDs.vulvo.perineal.condylomatosis <- as.numeric(as.character(my_data$STDs.vulvo.perineal.condylomatosis))
my_data$STDs.syphilis <- as.numeric(as.character(my_data$STDs.syphilis))
# sapply(my_data, is.numeric)
# now all columns are numeric
# typeof(my_data$STDs..Time.since.first.diagnosis) # all rows are ints
res <- cor(my_data)
corrplot(res, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
names(data)
# selecting `STDs`[12], `STDs..number.`[13], `STDs.condylomatosis`[14], `STDs.vulvo.perineal.condylomatosis`[15], `STDs.syphilis`[16], `STDs..Number.of.diagnosis`[17], `STDs..Time.since.first.diagnosis`[18]
# names(data)
# data$std
my_data <- as.data.frame(data[, c("STDs", "STDs..number.", "STDs.condylomatosis", "STDs.vulvo.perineal.condylomatosis", "STDs.syphilis", "STDs..Number.of.diagnosis")])
# my_data
# sapply(my_data, is.numeric) # many not numeric for some reason
# making all applicable columns numeric
my_data$STDs <- as.numeric(as.character(my_data$STDs))
my_data$STDs..number. <- as.numeric(as.character(my_data$STDs..number.))
my_data$STDs.condylomatosis  <- as.numeric(as.character(my_data$STDs.condylomatosis))
my_data$STDs.vulvo.perineal.condylomatosis <- as.numeric(as.character(my_data$STDs.vulvo.perineal.condylomatosis))
my_data$STDs.syphilis <- as.numeric(as.character(my_data$STDs.syphilis))
# sapply(my_data, is.numeric)
# now all columns are numeric
# typeof(my_data$STDs..Time.since.first.diagnosis) # all rows are ints
res <- cor(my_data)
corrplot(res, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
my_data <- as.data.frame(data[, c("STDs", "STDs..number.", "STDs.condylomatosis", "STDs.vulvo.perineal.condylomatosis", "STDs.syphilis", "STDs..Number.of.diagnosis", "STDs.AIDS")])
my_data$STDs <- as.numeric(as.character(my_data$STDs))
my_data$STDs..number. <- as.numeric(as.character(my_data$STDs..number.))
my_data$STDs.condylomatosis  <- as.numeric(as.character(my_data$STDs.condylomatosis))
my_data$STDs.vulvo.perineal.condylomatosis <- as.numeric(as.character(my_data$STDs.vulvo.perineal.condylomatosis))
my_data$STDs.syphilis <- as.numeric(as.character(my_data$STDs.syphilis))
my_data$STDs.AIDS <- as.numeric(as.character(my_data$STDs.AIDS))
res <- cor(my_data)
corrplot(res, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
my_data$STDs.AIDS <- as.numeric(my_data$STDs.AIDS)
res <- cor(my_data)
corrplot(res, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
# selecting `STDs`[12], `STDs..number.`[13], `STDs.condylomatosis`[14], `STDs.vulvo.perineal.condylomatosis`[15], `STDs.syphilis`[16], `STDs..Number.of.diagnosis`[17], `STDs..Time.since.first.diagnosis`[18]
# names(data)
# data$std
my_data <- as.data.frame(data[, c("STDs", "STDs..number.", "STDs.condylomatosis", "STDs.vulvo.perineal.condylomatosis", "STDs.syphilis", "STDs..Number.of.diagnosis", "STDs.AIDS")])
# my_data
# sapply(my_data, is.numeric) # many not numeric for some reason
# making all applicable columns numeric
my_data$STDs <- as.numeric(as.character(my_data$STDs))
my_data$STDs..number. <- as.numeric(as.character(my_data$STDs..number.))
my_data$STDs.condylomatosis  <- as.numeric(as.character(my_data$STDs.condylomatosis))
my_data$STDs.vulvo.perineal.condylomatosis <- as.numeric(as.character(my_data$STDs.vulvo.perineal.condylomatosis))
my_data$STDs.syphilis <- as.numeric(as.character(my_data$STDs.syphilis))
my_data$STDs.AIDS <- as.numeric(my_data$STDs.AIDS)
# sapply(my_data, is.numeric)
# now all columns are numeric
# typeof(my_data$STDs..Time.since.first.diagnosis) # all rows are ints
res <- cor(my_data)
corrplot(res, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
summary(my_data$STDs.AIDS)
my_data$STDs.AIDS
summary(
summary(
summary(my_data$STDs.AIDS)
summary(data)
summary(data)
# selecting `STDs`[12], `STDs..number.`[13], `STDs.condylomatosis`[14], `STDs.vulvo.perineal.condylomatosis`[15], `STDs.syphilis`[16], `STDs..Number.of.diagnosis`[17], `STDs..Time.since.first.diagnosis`[18]
# names(data)
# data$std
my_data <- as.data.frame(data[, c("STDs", "STDs..number.", "STDs.condylomatosis", "STDs.vulvo.perineal.condylomatosis", "STDs.syphilis", "STDs..Number.of.diagnosis")])
# my_data
# sapply(my_data, is.numeric) # many not numeric for some reason
# making all applicable columns numeric
my_data$STDs <- as.numeric(as.character(my_data$STDs))
my_data$STDs..number. <- as.numeric(as.character(my_data$STDs..number.))
my_data$STDs.condylomatosis  <- as.numeric(as.character(my_data$STDs.condylomatosis))
my_data$STDs.vulvo.perineal.condylomatosis <- as.numeric(as.character(my_data$STDs.vulvo.perineal.condylomatosis))
my_data$STDs.syphilis <- as.numeric(as.character(my_data$STDs.syphilis))
# sapply(my_data, is.numeric)
# now all columns are numeric
# typeof(my_data$STDs..Time.since.first.diagnosis) # all rows are ints
res <- cor(my_data)
corrplot(res, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
names(data)
data <- data[-c(4,5,6,9,10)]
names(data)
data <- data[-c(10:13)]
names(data)
# <<< read in data >>>>
data  <- read.csv("kag_risk_factors_cervical_cancer.csv", header=TRUE, sep=",", na.strings="")
# names(data)
# View(data)
# str(data)
# dim(data) #858 x 36
# head(data, 10)
# library(data.table)
# data <- as.data.frame(lapply(data, function(x){replace(x, x == 0.0,0)}))
# head(data, 10)
# data$Smokes..years.
# <<<<<<<<<< NA VALUES >>>>>>>>>
# sum(is.na(data)) # not giving correct response
# sapply(data, function(x) sum(is.na(x)))
#<<<< ELIMINATING COLUMNS WITH EXCESSIVE 0 VALUES >>>>
summary(data) #STDs.cervical.condylomatosis [15], STDs.vaginal.condylomatosis[16],  STDs.pelvic.inflammatory.disease[19], STDs.genital.herpes[20], STDs.molluscum.contagiosum[21], STDs.HIV[23], STDs.Hepatitis.B[24], STDs.HPV[25] are not helpful columns
names(data)
data <- data[ -c(15,16,19,20,21,23,24,25) ]# getting rid of unhelpful vars
# data <- data[ -c(17) ]# getting rid of unhelpful vars
# combining above 2 lines
# data <- data[ -c("STDs.cervical.condylomatosis","STDs.vaginal.condylomatosis","STDs.pelvic.inflammatory.disease","STDs.genital.herpes","STDs.molluscum.contagiosum","STDs.HIV","STDs.Hepatitis.B","STDs.HPV") ] ## not working
# STDs..Time.since.first.diagnosis[19] & STDs..Time.since.last.diagnosis[20] have a lot of missing values as well -- removing them
names(data)
data <- data[ -c(19,20) ]# getting rid of unhelpful vars
# summary(data)
# names(data)
data <- na.omit(data)
# data <- select_if(data, is.numeric) #gets rid of too much information
summary(data)
## <<<< removing most frequent '?' entries >>>>>
data <-  data[!data$IUD == "?", ] #eliminating some ? entries
data <-  data[!data$Smokes == "?", ] #eliminating some ? entries
data <-  data[!data$STDs.syphilis == "?", ] #eliminating some ? entries
summary(data)
names(data)
dim(data) #728  28 -- cleaning got rid of ~130 entries
# <<<< creating dependent variable >>>>>
# "Cervical cancer" = "Hinselmann" + "Schiller" + "Citology" + "Biopsy"
data$cancerPred <- data$Hinselmann + data$Schiller + data$Citology + data$Biopsy
# summary(data$cancerPred)
# data$cancerPred # all 0, 1, 2, 3, or 4
ggplot(data) + geom_histogram(aes(x = cancerPred), bins = 5, fill = "blue") +
labs(title = "Histogram of aggregate cancer predictors (Hinselmann + Schiller + Citology + Biopsy)", x = "age", y = "Frequency")
# ------ Pie Chart ----
cancer.0 <- filter(data, cancerPred == 0)
# dim(cancer.0) # 635
cancer.1 <- filter(data, cancerPred == 1)
# dim(cancer.1) # 36
cancer.2 <- filter(data, cancerPred == 2)
# dim(cancer.2) # 20
cancer.3 <- filter(data, cancerPred == 3)
# dim(cancer.3) # 32
cancer.4 <- filter(data, cancerPred == 4)
# dim(cancer.4) # only 5!
slices <- c(635, 36, 20, 32, 5)
lbls <- c("0", "1", "2", "3", "4")
pct <- round(slices/sum(slices)*100)
lbls <- paste(lbls, "-(",pct, ")") # add percents to labels
lbls <- paste(lbls,"%",sep="") # ad % to labels
pie(slices,labels = lbls, col=rainbow(length(lbls)),
main="Pie Chart of aggregate cancer predictor")
# selecting `Smokes`, `Smokes..years.`, `Smokes..packs.year.`
# names(data)
my_data.smokes <- as.data.frame(data[, c("Smokes", "Smokes..years.", "Smokes..packs.year.")])
# my_data.contraception
# sapply(my_data.smokes, is.numeric) # none numeric for some reason
# making all applicable columns numeric
my_data.smokes$Smokes <- as.numeric(as.character(my_data.smokes$Smokes))
my_data.smokes$Smokes..years. <- as.numeric(as.character(my_data.smokes$Smokes..years.))
my_data.smokes$Smokes..packs.year.  <- as.numeric(as.character(my_data.smokes$Smokes..packs.year.))
# sapply(my_data.smokes, is.numeric)
# now all columns are numeric
# typeof(my_data$STDs..Time.since.first.diagnosis) # all rows are ints
res.smokes <- cor(my_data.smokes)
corrplot(res.smokes, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
# Smoking
summary(data$Smokes..years.)
summary(data$Smokes..packs.year.)
data$packyears <- as.numeric(as.character(data$Smokes)) * as.numeric(as.character(data$Smokes..years.)) *
as.numeric(as.character(data$Smokes..packs.year.))
summary(data$Smokes)
summary(data$packyears)
summary(data$packyears[-c(which(is.na(data$packyears)))])
packyears <- data$packyears
packyears <- packyears[-c(which(is.na(packyears)))]
# Distribution
hist(data$packyears)
hist(log(data$packyears+1))
# Without packyears == 0
hist(data$packyears[-c(which(data$packyears == 0))])
summary(data$packyears[-c(which(data$packyears == 0))])
hist(log(data$packyears+1)[-c(which(log(data$packyears+1) == log(1)))]) # Looks more normal, you can split people below the mean as low-medium smokers and above the mean as heavy smokers
summary(log(data$packyears+1)[-c(which(log(data$packyears+1) == log(1)))])
# Create Smoker.status
data$Smoker.status <- rep("1", length(data$packyears))
nonsmoker.index <- c(which(log(data$packyears+1) == 0))
heavy.index <- c(which(log(data$packyears+1) > 2.346))
na.index <- c(which(is.na(data$packyears)))
data$Smoker.status[nonsmoker.index] <- "0"
data$Smoker.status[heavy.index] <- "2"
data$Smoker.status[na.index] <- "?"
data$Smoker.status <- as.factor(data$Smoker.status)
summary(data$Smoker.status)
# removing "Smokes"[5], "Smokes..years."[6],Smokes..packs.year."[7], & "packyears"[28] from df, as Smoker.status captures all that
names(data)
data <- data[-c(5:7, 28)]
names(data)
ggplot(data) + geom_histogram(aes(x = Age), bins = 25, fill = "blue") +
labs(title = "Histogram of participant ages", x = "age", y = "Frequency")
#<<< creating log age column >>>
data$logAge <- log(data$Age)
ggplot(data) + geom_histogram(aes(x = logAge), bins = 25, fill = "blue") +
labs(title = "Histogram of participant ages (log)", x = "age", y = "Frequency")
# removing original age column
data <- data[,-1]
# names(data)
# "Number.of.sexual.partners"
# data %>% select(Number.of.sexual.partners) %>% distinct() # get distinct values for # partners column
# making numeric
data$Number.of.sexual.partners <- as.numeric(as.character(data$Number.of.sexual.partners))
# data %>% select(Number.of.sexual.partners) %>% distinct()
# summary(data$Number.of.sexual.partners)
ggplot(data) + geom_histogram(aes(x = Number.of.sexual.partners), bins = 20, fill = "green") +
labs(title = "Histogram of num. of sexual partners", x = "Num. of partners", y = "Frequency")
# "First.sexual.intercourse"
# data %>% select(First.sexual.intercourse) %>% distinct()
# ggplot(data) + geom_histogram(aes(x = First.sexual.intercourse), bins = 10, fill = "red") +
# labs(title = "Histogram of num. of sexual partners", x = "Num. of partners", y = "Frequency")
ggplot(data, aes(x = First.sexual.intercourse, fill = factor(cancerPred))) +
geom_bar(stat = "count") +
xlab("Age of first sexual intercourse") +
ylab("Total count") +
labs(fill = "Cancer predictor value")
# "Num.of.pregnancies"
# data %>% select(Num.of.pregnancies) %>% distinct()
ggplot(data, aes(x = Num.of.pregnancies, fill = factor(cancerPred))) +
geom_bar(stat = "count") +
xlab("Number of pregnancies") +
ylab("Total count") +
labs(fill = "Cancer predictor value")
# names(data)
# data %>% select(Dx.HPV) %>% distinct() # categorical
# ------ breakdown of cancerPred value for all respondents who have HPV == 1 ----
hpv.y0 <- filter(data, Dx.HPV == 1, cancerPred == 0)
# dim(hpv.y0) # only 8
hpv.y1 <- filter(data, Dx.HPV == 1, cancerPred == 1)
# dim(hpv.y1) # 2
hpv.y2 <- filter(data, Dx.HPV == 1, cancerPred == 2)
# dim(hpv.y2) # 1
hpv.y3 <- filter(data, Dx.HPV == 1, cancerPred == 3)
# dim(hpv.y3) # 4
hpv.y4 <- filter(data, Dx.HPV == 1, cancerPred == 4)
# dim(hpv.y4) # 1
slices.hpv <- c(8, 2, 1, 4, 1)
lbls.hpv <- c("cancer pred. 0", "cancer pred. 1", "cancer pred. 2", "cancer pred. 3", "cancer pred. 4")
pct.hpv <- round(slices.hpv/sum(slices.hpv)*100)
lbls.hpv <- paste(lbls.hpv, "-(", pct.hpv, ")")
lbls.hpv <- paste(lbls.hpv, "%", sep="")
pie(slices.hpv,labels = lbls.hpv, col=rainbow(length(lbls.hpv)),
main="Pie Chart of cancer predictor values for patients with HPV")
# ------------ cancerPred for all repsondents HPV == 0 ---------
hpv0.y0 <- filter(data, Dx.HPV == 0, cancerPred == 0)
# dim(hpv0.y0) # 627
hpv0.y1 <- filter(data, Dx.HPV == 0, cancerPred == 1)
# dim(hpv0.y1) # 34
hpv0.y2 <- filter(data, Dx.HPV == 0, cancerPred == 2)
# dim(hpv0.y2) # 19
hpv0.y3 <- filter(data, Dx.HPV == 0, cancerPred == 3)
# dim(hpv0.y3) # 28
hpv0.y4 <- filter(data, Dx.HPV == 0, cancerPred == 4)
# dim(hpv0.y4) # 4
slices.hpv0 <- c(627, 34, 19, 28, 4)
lbls.hpv0 <- c("cancer pred. 0", "cancer pred. 1", "cancer pred. 2", "cancer pred. 3", "cancer pred. 4")
pct.hpv0 <- round(slices.hpv0/sum(slices.hpv0)*100)
lbls.hpv0 <- paste(lbls.hpv0, "-(", pct.hpv0, ")")
lbls.hpv0 <- paste(lbls.hpv0, "%", sep="")
pie(slices.hpv0,labels = lbls.hpv0, col=rainbow(length(lbls.hpv0)),
main="Pie Chart of cancer predictor values for patients without HPV")
# install.packages("corrplot")
library(corrplot)
# Use corrplot() to create a correlogram:
# The function corrplot() takes the correlation matrix as the first argument. The second argument (type=“upper”) is used to display only the upper triangular of the correlation matrix.
# selecting `Number.of.sexual.partners`, `First.sexual.intercourse`, `Num.of.pregnancies`
# names(data)
my_data.sxhistory <- as.data.frame(data[, c("Number.of.sexual.partners", "First.sexual.intercourse", "Num.of.pregnancies")])
# my_data.contraception
# sapply(my_data.sxhistory, is.numeric) # none numeric for some reason
# making all applicable columns numeric
my_data.sxhistory$Number.of.sexual.partners <- as.numeric(my_data.sxhistory$Number.of.sexual.partners)
my_data.sxhistory$First.sexual.intercourse <- as.numeric(my_data.sxhistory$First.sexual.intercourse)
my_data.sxhistory$Num.of.pregnancies  <- as.numeric(my_data.sxhistory$Num.of.pregnancies)
# my_data.sxhistory$Number.of.sexual.partners <- na.omit(my_data.sxhistory$Number.of.sexual.partners)
my_data.sxhistory <-  na.omit(my_data.sxhistory)
# sapply(my_data.sxhistory, is.numeric)
# now all columns are numeric
# typeof(my_data$STDs..Time.since.first.diagnosis) # all rows are ints
res.sxhistory <- cor(my_data.sxhistory)
corrplot(res.sxhistory, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
# selecting `Hormonal.Contraceptives`, `Hormonal.Contraceptives..years.`, `IUD`, `IUD..years.`
# names(data)
my_data.contraception <- as.data.frame(data[, c("Hormonal.Contraceptives", "Hormonal.Contraceptives..years.", "IUD", "IUD..years.")])
# my_data.contraception
# sapply(my_data.contraception, is.numeric) # none numeric for some reason
# making all applicable columns numeric
my_data.contraception$Hormonal.Contraceptives <- as.numeric(my_data.contraception$Hormonal.Contraceptives)
my_data.contraception$Hormonal.Contraceptives..years. <- as.numeric(my_data.contraception$Hormonal.Contraceptives..years.)
my_data.contraception$IUD  <- as.numeric(my_data.contraception$IUD)
my_data.contraception$IUD..years. <- as.numeric(my_data.contraception$IUD..years.)
# sapply(my_data.contraception, is.numeric)
# now all columns are numeric
# typeof(my_data$STDs..Time.since.first.diagnosis) # all rows are ints
res.contraception <- cor(my_data.contraception)
corrplot(res.contraception, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
# Hormonal contraceptives
str(data)
summary(data$Hormonal.Contraceptives)
summary(data$Hormonal.Contraceptives..years.)
# Create Years.HCP
data$Years.HCP <- as.numeric(as.character(data$Hormonal.Contraceptives)) *
as.numeric(as.character(data$Hormonal.Contraceptives..years.))
summary(data$Years.HCP)
# Histogram HCP
hist(data$Years.HCP[-c(which(is.na(data$Years.HCP)))])
# Histogram log(HCP+1)
hist(log(data$Years.HCP[-c(which(is.na(data$Years.HCP)))]+1))
# The log transformed data should be closer to normal is you remove first peak
log.years.hcp <- log(data$Years.HCP[-c(which(is.na(data$Years.HCP)))]+1)
log.years.hcp <- log.years.hcp[-c(which(log.years.hcp == log(1)))]
# hist(data$log.years.hcp)
# Create log.Years.HCP
data$log.Years.HCP <- log(data$Years.HCP+1)
summary(data$log.Years.HCP)
# IUD's
summary(data$IUD)
summary(data$IUD..years.)
# Create Years.IUD
data$Years.IUD <- as.numeric(as.character(data$IUD)) * as.numeric(as.character(data$IUD..years.))
summary(data$Years.IUD)
# Histogram IUD
data$Years.IUD
hist(data$Years.IUD[c(which(!is.na(data$Years.IUD)))])
# Histogram log(IUD+1)
hist(log(data$Years.IUD[c(which(!is.na(data$Years.IUD)))]+1))
# The log transformed data should be closer to normal is you remove first peak
log.years.iud <- log(data$Years.IUD[c(which(!is.na(data$Years.IUD)))]+1)
log.years.iud <- log.years.iud[-c(which(log.years.iud == log(1)))]
hist(log.years.iud)
# Create log.Years.IUD
data$log.Years.IUD <- log(data$Years.IUD+1)
summary(data$log.Years.IUD)
# removing 4 original variables - `Hormonal.Contraceptives`[4], `Hormonal.Contraceptives..years.`[5], `IUD`[6], `IUD..years.`[7], "Years.HCP"[26],
# names(data)
data <- data[-c(4:7,26)]
names(data)
# missed Years.IUD
data <- data[-c(23)]
names(data)
# selecting `STDs`[12], `STDs..number.`[13], `STDs.condylomatosis`[14], `STDs.vulvo.perineal.condylomatosis`[15], `STDs.syphilis`[16], `STDs..Number.of.diagnosis`[17], `STDs..Time.since.first.diagnosis`[18]
# names(data)
# data$std
my_data <- as.data.frame(data[, c("STDs", "STDs..number.", "STDs.condylomatosis", "STDs.vulvo.perineal.condylomatosis", "STDs.syphilis", "STDs..Number.of.diagnosis")])
# my_data
# sapply(my_data, is.numeric) # many not numeric for some reason
# making all applicable columns numeric
my_data$STDs <- as.numeric(as.character(my_data$STDs))
my_data$STDs..number. <- as.numeric(as.character(my_data$STDs..number.))
my_data$STDs.condylomatosis  <- as.numeric(as.character(my_data$STDs.condylomatosis))
my_data$STDs.vulvo.perineal.condylomatosis <- as.numeric(as.character(my_data$STDs.vulvo.perineal.condylomatosis))
my_data$STDs.syphilis <- as.numeric(as.character(my_data$STDs.syphilis))
# sapply(my_data, is.numeric)
# now all columns are numeric
# typeof(my_data$STDs..Time.since.first.diagnosis) # all rows are ints
res <- cor(my_data)
corrplot(res, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
names(data)
data <- data[-c(4,5,7,9,10)]
names(data)
data <- data[-c(10:13)]
names(data)
